<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pm.mapper.GoodMapper">
	<!-- 查找所有物品 -->
	<select id="listAll" resultType="good">
		select * from good;
	</select>
	<!-- 查找某种类型物品 -->
	<select id="listType" resultType="good" parameterType="String">
		select * from good where good_type=#{good_type}
	</select>
	<!-- 通过编号查找某个物品 -->
	<select id="get" resultType="good" parameterType="String">
		select * from good where good_id=#{good_id}
	</select>
	<!-- 通过物品名称查找物品 -->
	<select id="listName" resultType="good" parameterType="String">
		select * from good where good_name=#{good_name}
	</select>
	<!-- 插入新物品 -->
	<insert id="insertGood" parameterType="good">
		insert into good values(#{good_id},#{good_name},#{good_type},#{good_price},#{good_count},#{good_repetory},#{good_register_date},#{good_notes})
	</insert>
	<!-- 删除某个物品 -->
	<delete id="deleteGood" parameterType="String">
		delete from good where good_id=#{good_id}
	</delete>
	<!-- 修改物品信息 -->
	<update id="updateGood" parameterType="good">
		update good set good_name=#{good_name},good_type=#{good_type},good_price=#{good_price},
		good_count=#{good_count},good_repetory=#{good_repetory},good_register_date=#{good_register_date},
		good_notes=#{good_notes} where good_id=#{good_id}
	</update>
	<select id="getCount" parameterType="String" resultType="int">
		select good_count from good where good_id=#{good_id}
	</select>
	<select id="listPager" resultType="good" parameterType="Pager">
		select * from good limit #{startindex},#{pagesize};
	</select>
	<select id="getRecords" resultType="int">
		select count(*) from good 
	</select>
	<select id="getLastId" resultType="String">
		select good_id from good order by good_id desc limit 0,1
	</select>
	<select id="listLike" resultType="good" parameterType="String">
		select * from good where good_id like '%${value}%' or good_name like '%${value}%' or 
		good_type like '%${value}%' or good_count like '%${value}%' or good_price like '%${value}%' or
		good_repetory like '%${value}%' or date_format(good_register_date, '%Y-%m-%d') like '%${value}%' or good_notes like '%${value}%'
	</select>
	<sql id="translate">
     	<choose>
        	<when test='condition.fieldName == "good_id"'>
   				good_id
   			</when>
   	  	</choose>
   	  	<choose>
        	<when test='condition.fieldName == "good_name"'>
   				good_name
   			</when>
   	  	</choose>
   	  	<choose>
        	<when test='condition.fieldName == "good_type"'>
   				good_type
   			</when>
   	  	</choose>
   	  	<choose>
        	<when test='condition.fieldName == "good_price"'>
   				good_price
   			</when>
   	  	</choose>
   	  	<choose>
        	<when test='condition.fieldName == "good_count"'>
   				good_count
   			</when>
   	  	</choose>
   	  	<choose>
        	<when test='condition.fieldName == "good_repetory"'>
   				good_repetory
   			</when>
   	  	</choose>
   	  	<choose>
        	<when test='condition.fieldName == "good_register_date"'>
   				good_register_date
   			</when>
   	  	</choose>
   	  	<choose>
        	<when test='condition.fieldName == "good_notes"'>
   				good_notes
   			</when>
   	  	</choose>
   	</sql>
	<select id="queryGoodStrict" parameterType="list" resultType="good">
		select * from good 
		<where>
			<foreach collection="list" item="condition" separator="and">
				<choose>
	    			<when test='condition.symbol == "="'>
	    				<include refid="translate"></include> = #{condition.parameter1}
	   				</when>
   				</choose>
   				<choose>
		    		<when test='condition.symbol == "&lt;&gt;"'>
		    			<include refid="translate"></include> != #{condition.parameter1}
		   			</when>
   				</choose>
   				<choose>
		    		<when test='condition.symbol == "&lt;"'>
		    			<include refid="translate"></include> &lt; #{condition.parameter1}
		   			</when>
	   			</choose>
	    	    <choose>
		    		<when test='condition.symbol == "&gt;"'>
		    			<include refid="translate"></include> &gt; #{condition.parameter1}
		   			</when>
	   			</choose>
	    	    <choose>
		    		<when test='condition.symbol == "&lt;="'>
		    			<include refid="translate"></include> &lt;= #{condition.parameter1}
		   			</when>
	   			</choose>
	    	    <choose>
		    		<when test='condition.symbol == "&gt;="'>
		    			<include refid="translate"></include> &gt;= #{condition.parameter1}
		   			</when>
	   			</choose>
	    	    <choose>
		    		<when test='condition.symbol == "between"'>
		    			<include refid="translate"></include> between #{condition.parameter1} and #{condition.parameter2}
		   			</when>
	   			</choose>
	    	    <choose>
		    		<when test='condition.symbol == "like"'>
		    			locate(#{condition.parameter1}, <include refid="translate"></include>)>0
		   			</when>
	   			</choose>
	    	    <choose>
		    		<when test='condition.symbol == "is not null"'>
		    			<include refid="translate"></include> is not null
		   			</when>
	   			</choose>
	    	    <choose>
		    		<when test='condition.symbol == "is null"'>
		    			<include refid="translate"></include> is null
		   			</when>
	   			</choose>
			</foreach>
		</where>		
	</select>
</mapper>